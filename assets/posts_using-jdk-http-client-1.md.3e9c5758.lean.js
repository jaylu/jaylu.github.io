import{_ as n,o as a,c as l,O as p}from"./chunks/framework.cef5bead.js";const B=JSON.parse('{"title":"Using JDK Http Client - 1","description":"using jdk http client to send simple GET/POST request, and also some complex case for streaming request body, stream receiving response body.","frontmatter":{"date":"2023-01-06T00:00:00.000Z","title":"Using JDK Http Client - 1","tags":["Java","JDK Http Client"],"description":"using jdk http client to send simple GET/POST request, and also some complex case for streaming request body, stream receiving response body."},"headers":[],"relativePath":"posts/using-jdk-http-client-1.md","filePath":"posts/using-jdk-http-client-1.md"}'),o={name:"posts/using-jdk-http-client-1.md"};function e(t,s,F,c,r,y){return a(),l("div",null,s[0]||(s[0]=[p(`<h1 id="using-jdk-http-client-1" tabindex="-1">Using JDK Http Client - 1 <a class="header-anchor" href="#using-jdk-http-client-1" aria-label="Permalink to &quot;Using JDK Http Client - 1&quot;">​</a></h1><p>When we want sending some simple RESTFUL http requests, we might turn to OKHttpClient or Jetty client. It&#39;s fine, but actually we have another choice - JDK http client. It&#39;s ship with JDK and we don&#39;t need extra dependencies.</p><p>We are using mu-server as the http server, You can check out the documentation <a href="https://muserver.io/" target="_blank" rel="noreferrer">here</a>.</p><p>Here is a quick guide with working example.</p><h2 id="creating-jdk-http-client-instance" tabindex="-1">Creating JDK http client instance <a class="header-anchor" href="#creating-jdk-http-client-instance" aria-label="Permalink to &quot;Creating JDK http client instance&quot;">​</a></h2><p>The <code>trustAll</code> means whether to verify the https certificate on SSL handshake. We need to integrate with the public key if we want to verify target server&#39;s SSL key.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">static</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">HttpClient</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">client</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">boolean</span><span style="color:#F8F8F2;"> trustAll) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">HttpClient</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Builder</span><span style="color:#F8F8F2;"> builder </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> HttpClient.</span><span style="color:#50FA7B;">newBuilder</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (trustAll) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">try</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">final</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">TrustManager</span><span style="color:#F8F8F2;">[] trustAllCerts </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">TrustManager</span><span style="color:#F8F8F2;">[]{</span></span>
<span class="line"><span style="color:#F8F8F2;">                    </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">X509TrustManager</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">                        @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">                        </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">checkClientTrusted</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">                            </span><span style="color:#8BE9FD;font-style:italic;">X509Certificate</span><span style="color:#F8F8F2;">[] </span><span style="color:#FFB86C;font-style:italic;">chain</span><span style="color:#F8F8F2;">, </span></span>
<span class="line"><span style="color:#F8F8F2;">                            </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">authType</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">                        @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">                        </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">checkServerTrusted</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">                            </span><span style="color:#8BE9FD;font-style:italic;">X509Certificate</span><span style="color:#F8F8F2;">[] </span><span style="color:#FFB86C;font-style:italic;">chain</span><span style="color:#F8F8F2;">, </span></span>
<span class="line"><span style="color:#F8F8F2;">                            </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">authType</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">                        @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">                        </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">X509Certificate</span><span style="color:#F8F8F2;">[] </span><span style="color:#50FA7B;">getAcceptedIssuers</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">                            </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">X509Certificate</span><span style="color:#F8F8F2;">[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">                        }</span></span>
<span class="line"><span style="color:#F8F8F2;">                    }</span></span>
<span class="line"><span style="color:#F8F8F2;">            };</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#8BE9FD;font-style:italic;">SSLContext</span><span style="color:#F8F8F2;"> sslContext </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> SSLContext.</span><span style="color:#50FA7B;">getInstance</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">SSL</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            sslContext.</span><span style="color:#50FA7B;">init</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">, trustAllCerts, </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> java.security.</span><span style="color:#50FA7B;">SecureRandom</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#F8F8F2;">            builder.</span><span style="color:#50FA7B;">sslContext</span><span style="color:#F8F8F2;">(sslContext);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        } </span><span style="color:#FF79C6;">catch</span><span style="color:#F8F8F2;"> (</span><span style="color:#8BE9FD;font-style:italic;">NoSuchAlgorithmException</span><span style="color:#F8F8F2;"> | </span><span style="color:#8BE9FD;font-style:italic;">KeyManagementException</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">throw</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">RuntimeException</span><span style="color:#F8F8F2;">(e);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> builder.</span><span style="color:#50FA7B;">build</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><h2 id="simple-get-post-request" tabindex="-1">Simple GET/POST request <a class="header-anchor" href="#simple-get-post-request" aria-label="Permalink to &quot;Simple GET/POST request&quot;">​</a></h2><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#8BE9FD;font-style:italic;">Test</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">testGet</span><span style="color:#F8F8F2;">() throws IOException, InterruptedException {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">MuServer</span><span style="color:#F8F8F2;"> server </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> MuServerBuilder.</span><span style="color:#50FA7B;">httpsServer</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">addHandler</span><span style="color:#F8F8F2;">(Method.GET, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/something</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, (request, response, map) </span><span style="color:#8BE9FD;font-style:italic;">-&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">                response.</span><span style="color:#50FA7B;">write</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Hello, world!</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            })</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">HttpResponse</span><span style="color:#F8F8F2;">&lt;String&gt; resp </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> client.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(HttpRequest.</span><span style="color:#50FA7B;">newBuilder</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">uri</span><span style="color:#F8F8F2;">(server.</span><span style="color:#50FA7B;">uri</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/something</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">header</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">user-agent</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">jdk-httpclient</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">build</span><span style="color:#F8F8F2;">(), HttpResponse.BodyHandlers.</span><span style="color:#50FA7B;">ofString</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">assertThat</span><span style="color:#F8F8F2;">(resp.</span><span style="color:#50FA7B;">statusCode</span><span style="color:#F8F8F2;">()).</span><span style="color:#50FA7B;">isEqualTo</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">200</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">assertThat</span><span style="color:#F8F8F2;">(resp.</span><span style="color:#50FA7B;">body</span><span style="color:#F8F8F2;">()).</span><span style="color:#50FA7B;">isEqualTo</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Hello, world!</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#8BE9FD;font-style:italic;">Test</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">testPost</span><span style="color:#F8F8F2;">() throws IOException, InterruptedException {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">MuServer</span><span style="color:#F8F8F2;"> server </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> MuServerBuilder.</span><span style="color:#50FA7B;">httpsServer</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">addHandler</span><span style="color:#F8F8F2;">(Method.POST, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/something</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, (request, response, map) </span><span style="color:#8BE9FD;font-style:italic;">-&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">                </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#F8F8F2;"> requestBody </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> request.</span><span style="color:#50FA7B;">readBodyAsString</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">                response.</span><span style="color:#50FA7B;">write</span><span style="color:#F8F8F2;">(requestBody);</span></span>
<span class="line"><span style="color:#F8F8F2;">            })</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#F8F8F2;"> body </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">randomAsciiStringOfLength</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">10000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">HttpResponse</span><span style="color:#F8F8F2;">&lt;String&gt; resp </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> client.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(HttpRequest.</span><span style="color:#50FA7B;">newBuilder</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">method</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">POST</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, HttpRequest.BodyPublishers.</span><span style="color:#50FA7B;">ofString</span><span style="color:#F8F8F2;">(body))</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">uri</span><span style="color:#F8F8F2;">(server.</span><span style="color:#50FA7B;">uri</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/something</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">header</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">user-agent</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">jdk-httpclient</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">build</span><span style="color:#F8F8F2;">(), HttpResponse.BodyHandlers.</span><span style="color:#50FA7B;">ofString</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">assertThat</span><span style="color:#F8F8F2;">(resp.</span><span style="color:#50FA7B;">statusCode</span><span style="color:#F8F8F2;">()).</span><span style="color:#50FA7B;">isEqualTo</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">200</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">assertThat</span><span style="color:#F8F8F2;">(resp.</span><span style="color:#50FA7B;">body</span><span style="color:#F8F8F2;">()).</span><span style="color:#50FA7B;">isEqualTo</span><span style="color:#F8F8F2;">(body);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><h1 id="streaming-request-body" tabindex="-1">Streaming request body <a class="header-anchor" href="#streaming-request-body" aria-label="Permalink to &quot;Streaming request body&quot;">​</a></h1><p>Here we use <code>HttpRequest.BodyPublishers</code> interface for streaming the request body chunk bit by bit.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;"> @</span><span style="color:#8BE9FD;font-style:italic;">Test</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">testPostRequestByBodyPublisher</span><span style="color:#F8F8F2;">() throws IOException, InterruptedException {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">MuServer</span><span style="color:#F8F8F2;"> server </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> MuServerBuilder.</span><span style="color:#50FA7B;">httpsServer</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">addHandler</span><span style="color:#F8F8F2;">(Method.POST, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/something</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, (request, response, map) </span><span style="color:#8BE9FD;font-style:italic;">-&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">                </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#F8F8F2;"> requestBody </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> request.</span><span style="color:#50FA7B;">readBodyAsString</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">                response.</span><span style="color:#50FA7B;">write</span><span style="color:#F8F8F2;">(requestBody);</span></span>
<span class="line"><span style="color:#F8F8F2;">            })</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">HttpResponse</span><span style="color:#F8F8F2;">&lt;String&gt; resp </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> client.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(HttpRequest.</span><span style="color:#50FA7B;">newBuilder</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">method</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">POST</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, HttpRequest.BodyPublishers.</span><span style="color:#50FA7B;">fromPublisher</span><span style="color:#F8F8F2;">(subscriber </span><span style="color:#8BE9FD;font-style:italic;">-&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">                </span><span style="color:#8BE9FD;font-style:italic;">AtomicInteger</span><span style="color:#F8F8F2;"> counter </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">AtomicInteger</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">                subscriber.</span><span style="color:#50FA7B;">onSubscribe</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> Flow.</span><span style="color:#50FA7B;">Subscription</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">                    @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">                    </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">request</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">long</span><span style="color:#F8F8F2;"> n) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                        </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (counter.</span><span style="color:#50FA7B;">incrementAndGet</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">&lt;=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">9</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                            subscriber.</span><span style="color:#50FA7B;">onNext</span><span style="color:#F8F8F2;">(ByteBuffer.</span><span style="color:#50FA7B;">wrap</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">                                String.</span><span style="color:#50FA7B;">valueOf</span><span style="color:#F8F8F2;">(counter.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">                                .</span><span style="color:#50FA7B;">getBytes</span><span style="color:#F8F8F2;">(StandardCharsets.UTF_8)));</span></span>
<span class="line"><span style="color:#F8F8F2;">                        } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">                            subscriber.</span><span style="color:#50FA7B;">onComplete</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">                        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">                    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">                    @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">                    </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">cancel</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">                    }</span></span>
<span class="line"><span style="color:#F8F8F2;">                });</span></span>
<span class="line"><span style="color:#F8F8F2;">            }))</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">uri</span><span style="color:#F8F8F2;">(server.</span><span style="color:#50FA7B;">uri</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/something</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">header</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">user-agent</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">jdk-httpclient</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">build</span><span style="color:#F8F8F2;">(), HttpResponse.BodyHandlers.</span><span style="color:#50FA7B;">ofString</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">assertThat</span><span style="color:#F8F8F2;">(resp.</span><span style="color:#50FA7B;">statusCode</span><span style="color:#F8F8F2;">()).</span><span style="color:#50FA7B;">isEqualTo</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">200</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">assertThat</span><span style="color:#F8F8F2;">(resp.</span><span style="color:#50FA7B;">body</span><span style="color:#F8F8F2;">()).</span><span style="color:#50FA7B;">isEqualTo</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">123456789</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><p>And here is another example by using the <code>InputStream</code></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">InputStream</span><span style="color:#F8F8F2;"> inputStream </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> JdkHttpClientTest.class.</span><span style="color:#50FA7B;">getClassLoader</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#50FA7B;">getResourceAsStream</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">test-file.txt</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">HttpResponse</span><span style="color:#F8F8F2;">&lt;String&gt; resp </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> client.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(HttpRequest.</span><span style="color:#50FA7B;">newBuilder</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">method</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">POST</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, HttpRequest.BodyPublishers.</span><span style="color:#50FA7B;">ofInputStream</span><span style="color:#F8F8F2;">(() </span><span style="color:#8BE9FD;font-style:italic;">-&gt;</span><span style="color:#F8F8F2;"> inputStream))</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">uri</span><span style="color:#F8F8F2;">(server.</span><span style="color:#50FA7B;">uri</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/something</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">header</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">user-agent</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">jdk-httpclient</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">build</span><span style="color:#F8F8F2;">(), HttpResponse.BodyHandlers.</span><span style="color:#50FA7B;">ofString</span><span style="color:#F8F8F2;">());</span></span></code></pre></div><h1 id="stream-receiving-response-body" tabindex="-1">Stream receiving response body <a class="header-anchor" href="#stream-receiving-response-body" aria-label="Permalink to &quot;Stream receiving response body&quot;">​</a></h1><p>Here we use <code>HttpResponse.BodyHandler</code> interface for receiving data bit by bit. Do remember to call <code>subscription.request(1)</code> when ready to take next byte, otherwise the callback will hang there without receive anything.</p><p>In the <code>onNext()</code> callback, we can do some sleep if we want to simulate slow client.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#8BE9FD;font-style:italic;">Test</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">testReadResponseBodyByBodyHandler</span><span style="color:#F8F8F2;">() throws IOException, InterruptedException {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#F8F8F2;"> body </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">randomAsciiStringOfLength</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">10</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">1024</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">1024</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">MuServer</span><span style="color:#F8F8F2;"> server </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> MuServerBuilder.</span><span style="color:#50FA7B;">httpsServer</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">addHandler</span><span style="color:#F8F8F2;">(Method.GET, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/something</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, (request, response, map) </span><span style="color:#8BE9FD;font-style:italic;">-&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">                response.</span><span style="color:#50FA7B;">write</span><span style="color:#F8F8F2;">(body);</span></span>
<span class="line"><span style="color:#F8F8F2;">            })</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">CountDownLatch</span><span style="color:#F8F8F2;"> latch </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">CountDownLatch</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">StringBuilder</span><span style="color:#F8F8F2;"> bodyBuilder </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">StringBuilder</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">AtomicInteger</span><span style="color:#F8F8F2;"> status </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">AtomicInteger</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">HttpRequest</span><span style="color:#F8F8F2;"> request </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> HttpRequest.</span><span style="color:#50FA7B;">newBuilder</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">uri</span><span style="color:#F8F8F2;">(server.</span><span style="color:#50FA7B;">uri</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/something</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">header</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">user-agent</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">jdk-httpclient</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">build</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">HttpResponse</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">BodyHandler</span><span style="color:#F8F8F2;">&lt;Void&gt; bodyHandler </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> responseInfo </span><span style="color:#8BE9FD;font-style:italic;">-&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        status.</span><span style="color:#50FA7B;">set</span><span style="color:#F8F8F2;">(responseInfo.</span><span style="color:#50FA7B;">statusCode</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> HttpResponse.BodySubscribers.</span><span style="color:#50FA7B;">fromSubscriber</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">Flow</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Subscriber</span><span style="color:#F8F8F2;">&lt;&gt;() {</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">private</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">Flow</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Subscription</span><span style="color:#F8F8F2;"> subscription;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">public</span><span style="color:#50FA7B;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#50FA7B;"> onSubscribe(</span><span style="color:#8BE9FD;font-style:italic;">Flow</span><span style="color:#50FA7B;">.</span><span style="color:#8BE9FD;font-style:italic;">Subscription</span><span style="color:#50FA7B;"> </span><span style="color:#FFB86C;font-style:italic;">subscription</span><span style="color:#50FA7B;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#50FA7B;">.</span><span style="color:#F8F8F2;">subscription</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> subscription;</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#50FA7B;">.</span><span style="color:#F8F8F2;">subscription</span><span style="color:#50FA7B;">.request(</span><span style="color:#BD93F9;">1</span><span style="color:#50FA7B;">);</span></span>
<span class="line"><span style="color:#50FA7B;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">public</span><span style="color:#50FA7B;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#50FA7B;"> onNext(</span><span style="color:#8BE9FD;font-style:italic;">List</span><span style="color:#50FA7B;">&lt;</span><span style="color:#F8F8F2;">ByteBuffer</span><span style="color:#50FA7B;">&gt; </span><span style="color:#FFB86C;font-style:italic;">items</span><span style="color:#50FA7B;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#FF79C6;">for</span><span style="color:#50FA7B;"> (</span><span style="color:#8BE9FD;font-style:italic;">ByteBuffer</span><span style="color:#50FA7B;"> </span><span style="color:#F8F8F2;">item</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;">:</span><span style="color:#50FA7B;"> items) {</span></span>
<span class="line"><span style="color:#50FA7B;">                    </span><span style="color:#F8F8F2;">bodyBuilder</span><span style="color:#50FA7B;">.append(</span><span style="color:#F8F8F2;">StandardCharsets</span><span style="color:#50FA7B;">.</span><span style="color:#F8F8F2;">UTF_8</span><span style="color:#50FA7B;">.decode(item));</span></span>
<span class="line"><span style="color:#50FA7B;">                }</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#6272A4;">// we can sleep here to simulate slow client</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#6272A4;">// try {</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#6272A4;">//     Thread.sleep(1L);</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#6272A4;">// } catch (InterruptedException e) {</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#6272A4;">//     throw new RuntimeException(e);</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#6272A4;">// }</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#50FA7B;">.</span><span style="color:#F8F8F2;">subscription</span><span style="color:#50FA7B;">.request(</span><span style="color:#BD93F9;">1</span><span style="color:#50FA7B;">);</span></span>
<span class="line"><span style="color:#50FA7B;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">public</span><span style="color:#50FA7B;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#50FA7B;"> onError(</span><span style="color:#8BE9FD;font-style:italic;">Throwable</span><span style="color:#50FA7B;"> </span><span style="color:#FFB86C;font-style:italic;">throwable</span><span style="color:#50FA7B;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">public</span><span style="color:#50FA7B;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#50FA7B;"> onComplete() {</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#F8F8F2;">latch</span><span style="color:#50FA7B;">.countDown();</span></span>
<span class="line"><span style="color:#50FA7B;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        });</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    client.</span><span style="color:#50FA7B;">sendAsync</span><span style="color:#F8F8F2;">(request, bodyHandler);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    latch.</span><span style="color:#50FA7B;">await</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, TimeUnit.MINUTES);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">assertThat</span><span style="color:#F8F8F2;">(status.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">()).</span><span style="color:#50FA7B;">isEqualTo</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">200</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">assertThat</span><span style="color:#F8F8F2;">(bodyBuilder.</span><span style="color:#50FA7B;">toString</span><span style="color:#F8F8F2;">()).</span><span style="color:#50FA7B;">isEqualTo</span><span style="color:#F8F8F2;">(body);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>This is a quick guide for using JDK http client to send simple GET/POST request, and also some complex case for streaming request body, stream receiving response body. Please read the next article for working with SSE and websocket.</p><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">​</a></h2><p><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.net.http/java/net/http/HttpClient.html" target="_blank" rel="noreferrer">https://docs.oracle.com/en/java/javase/17/docs/api/java.net.http/java/net/http/HttpClient.html</a></p>`,22)]))}const u=n(o,[["render",e]]);export{B as __pageData,u as default};
