import{_ as n,o as a,c as l,O as p}from"./chunks/framework.cef5bead.js";const B=JSON.parse('{"title":"Using JDK Http Client - 2","description":"using jdk http client working with SSE (sever sent event) and websocket.","frontmatter":{"date":"2023-01-07T00:00:00.000Z","title":"Using JDK Http Client - 2","tags":["Java","JDK Http Client"],"description":"using jdk http client working with SSE (sever sent event) and websocket."},"headers":[],"relativePath":"posts/using-jdk-http-client-2.md","filePath":"posts/using-jdk-http-client-2.md"}'),o={name:"posts/using-jdk-http-client-2.md"};function e(t,s,F,c,r,y){return a(),l("div",null,s[0]||(s[0]=[p(`<h1 id="using-jdk-http-client-2" tabindex="-1">Using JDK Http Client - 2 <a class="header-anchor" href="#using-jdk-http-client-2" aria-label="Permalink to &quot;Using JDK Http Client - 2&quot;">​</a></h1><h2 id="working-with-sse-server-sent-event" tabindex="-1">Working with SSE (server sent event) <a class="header-anchor" href="#working-with-sse-server-sent-event" aria-label="Permalink to &quot;Working with SSE (server sent event)&quot;">​</a></h2><p>JDK Http client did not come with first class support for SSE, but we can achieve that easily by implementing the listener callback by ourself with <code>HttpResponse.BodyHandler</code>. This implementation is POC only, it didn&#39;t cater about some edge cases and performance.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula"><code><span class="line"></span>
<span class="line"><span style="color:#6272A4;">// define the SSE callback interface</span></span>
<span class="line"><span style="color:#FF79C6;">interface</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">SseListener</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">onMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">data</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">eventName</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">id</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">onOpen</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">int</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">status</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">onClose</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">onError</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// implement that with the HttpResponse.BodyHandler&lt;Void&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">SseBodyHandler</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">implements</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">HttpResponse.BodyHandler</span><span style="color:#F8F8F2;">&lt;Void&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">private</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">final</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">SseListener</span><span style="color:#F8F8F2;"> listener;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">SseBodyHandler</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">SseListener</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">listener</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.listener </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> listener;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">HttpResponse</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">BodySubscriber</span><span style="color:#F8F8F2;">&lt;Void&gt; </span><span style="color:#50FA7B;">apply</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">HttpResponse</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">ResponseInfo</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">responseInfo</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        listener.</span><span style="color:#50FA7B;">onOpen</span><span style="color:#F8F8F2;">(responseInfo.</span><span style="color:#50FA7B;">statusCode</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> HttpResponse.BodySubscribers.</span><span style="color:#50FA7B;">fromSubscriber</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">Flow</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Subscriber</span><span style="color:#F8F8F2;">&lt;&gt;() {</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">private</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">Flow</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Subscription</span><span style="color:#F8F8F2;"> subscription;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">public</span><span style="color:#50FA7B;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#50FA7B;"> onSubscribe(</span><span style="color:#8BE9FD;font-style:italic;">Flow</span><span style="color:#50FA7B;">.</span><span style="color:#8BE9FD;font-style:italic;">Subscription</span><span style="color:#50FA7B;"> </span><span style="color:#FFB86C;font-style:italic;">subscription</span><span style="color:#50FA7B;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#50FA7B;">.</span><span style="color:#F8F8F2;">subscription</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> subscription;</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#50FA7B;">.</span><span style="color:#F8F8F2;">subscription</span><span style="color:#50FA7B;">.request(</span><span style="color:#BD93F9;">1</span><span style="color:#50FA7B;">);</span></span>
<span class="line"><span style="color:#50FA7B;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">public</span><span style="color:#50FA7B;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#50FA7B;"> onNext(</span><span style="color:#8BE9FD;font-style:italic;">List</span><span style="color:#50FA7B;">&lt;</span><span style="color:#F8F8F2;">ByteBuffer</span><span style="color:#50FA7B;">&gt; </span><span style="color:#FFB86C;font-style:italic;">items</span><span style="color:#50FA7B;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#FF79C6;">for</span><span style="color:#50FA7B;"> (</span><span style="color:#8BE9FD;font-style:italic;">ByteBuffer</span><span style="color:#50FA7B;"> </span><span style="color:#F8F8F2;">item</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;">:</span><span style="color:#50FA7B;"> items) {</span></span>
<span class="line"><span style="color:#50FA7B;">                    </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#50FA7B;"> </span><span style="color:#F8F8F2;">decode</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> </span><span style="color:#F8F8F2;">StandardCharsets</span><span style="color:#50FA7B;">.</span><span style="color:#F8F8F2;">UTF_8</span><span style="color:#50FA7B;">.decode(item).toString();</span></span>
<span class="line"><span style="color:#50FA7B;">                    </span><span style="color:#FF79C6;">if</span><span style="color:#50FA7B;"> (</span><span style="color:#F8F8F2;">decode</span><span style="color:#50FA7B;">.endsWith(</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;">\\n\\n</span><span style="color:#E9F284;">&quot;</span><span style="color:#50FA7B;">)) {</span></span>
<span class="line"><span style="color:#50FA7B;">                        decode </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> </span><span style="color:#F8F8F2;">decode</span><span style="color:#50FA7B;">.substring(</span><span style="color:#BD93F9;">0</span><span style="color:#50FA7B;">, </span><span style="color:#F8F8F2;">decode</span><span style="color:#50FA7B;">.length() </span><span style="color:#FF79C6;">-</span><span style="color:#50FA7B;"> </span><span style="color:#BD93F9;">2</span><span style="color:#50FA7B;">);</span></span>
<span class="line"><span style="color:#50FA7B;">                    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">                    </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#50FA7B;">[] </span><span style="color:#F8F8F2;">lines</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> </span><span style="color:#F8F8F2;">decode</span><span style="color:#50FA7B;">.split(</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;">\\n</span><span style="color:#E9F284;">&quot;</span><span style="color:#50FA7B;">);</span></span>
<span class="line"><span style="color:#50FA7B;">                    </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#50FA7B;"> </span><span style="color:#F8F8F2;">id</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> </span><span style="color:#BD93F9;">null</span><span style="color:#50FA7B;">;</span></span>
<span class="line"><span style="color:#50FA7B;">                    </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#50FA7B;"> </span><span style="color:#F8F8F2;">event</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> </span><span style="color:#BD93F9;">null</span><span style="color:#50FA7B;">;</span></span>
<span class="line"><span style="color:#50FA7B;">                    </span><span style="color:#8BE9FD;font-style:italic;">StringBuilder</span><span style="color:#50FA7B;"> </span><span style="color:#F8F8F2;">dataBuilder</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#50FA7B;"> StringBuilder</span><span style="color:#F8F8F2;">()</span><span style="color:#50FA7B;">;</span></span>
<span class="line"><span style="color:#50FA7B;">                    </span><span style="color:#FF79C6;">for</span><span style="color:#50FA7B;"> (</span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#50FA7B;"> </span><span style="color:#F8F8F2;">line</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;">:</span><span style="color:#50FA7B;"> lines) {</span></span>
<span class="line"><span style="color:#50FA7B;">                        </span><span style="color:#FF79C6;">if</span><span style="color:#50FA7B;"> (</span><span style="color:#F8F8F2;">line</span><span style="color:#50FA7B;">.startsWith(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">id: </span><span style="color:#E9F284;">&quot;</span><span style="color:#50FA7B;">)) {</span></span>
<span class="line"><span style="color:#50FA7B;">                            id </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> </span><span style="color:#F8F8F2;">line</span><span style="color:#50FA7B;">.substring(</span><span style="color:#BD93F9;">4</span><span style="color:#50FA7B;">);</span></span>
<span class="line"><span style="color:#50FA7B;">                        } </span><span style="color:#FF79C6;">else</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;">if</span><span style="color:#50FA7B;"> (</span><span style="color:#F8F8F2;">line</span><span style="color:#50FA7B;">.startsWith(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">event: </span><span style="color:#E9F284;">&quot;</span><span style="color:#50FA7B;">)) {</span></span>
<span class="line"><span style="color:#50FA7B;">                            event </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> </span><span style="color:#F8F8F2;">line</span><span style="color:#50FA7B;">.substring(</span><span style="color:#BD93F9;">7</span><span style="color:#50FA7B;">);</span></span>
<span class="line"><span style="color:#50FA7B;">                        } </span><span style="color:#FF79C6;">else</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;">if</span><span style="color:#50FA7B;"> (</span><span style="color:#F8F8F2;">line</span><span style="color:#50FA7B;">.startsWith(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">data: </span><span style="color:#E9F284;">&quot;</span><span style="color:#50FA7B;">)) {</span></span>
<span class="line"><span style="color:#50FA7B;">                            </span><span style="color:#F8F8F2;">dataBuilder</span><span style="color:#50FA7B;">.append(</span><span style="color:#F8F8F2;">line</span><span style="color:#50FA7B;">.substring(</span><span style="color:#BD93F9;">6</span><span style="color:#50FA7B;">));</span></span>
<span class="line"><span style="color:#50FA7B;">                        }</span></span>
<span class="line"><span style="color:#50FA7B;">                    }</span></span>
<span class="line"><span style="color:#50FA7B;">                    </span><span style="color:#F8F8F2;">listener</span><span style="color:#50FA7B;">.onMessage(</span><span style="color:#F8F8F2;">dataBuilder</span><span style="color:#50FA7B;">.toString(), event, id);</span></span>
<span class="line"><span style="color:#50FA7B;">                }</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#FF79C6;">try</span><span style="color:#50FA7B;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">                    </span><span style="color:#F8F8F2;">Thread</span><span style="color:#50FA7B;">.sleep(</span><span style="color:#BD93F9;">1L</span><span style="color:#50FA7B;">);</span></span>
<span class="line"><span style="color:#50FA7B;">                } </span><span style="color:#FF79C6;">catch</span><span style="color:#50FA7B;"> (</span><span style="color:#8BE9FD;font-style:italic;">InterruptedException</span><span style="color:#50FA7B;"> </span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#50FA7B;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">                    </span><span style="color:#FF79C6;">throw</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#50FA7B;"> RuntimeException</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">e</span><span style="color:#F8F8F2;">)</span><span style="color:#50FA7B;">;</span></span>
<span class="line"><span style="color:#50FA7B;">                }</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#50FA7B;">.</span><span style="color:#F8F8F2;">subscription</span><span style="color:#50FA7B;">.request(</span><span style="color:#BD93F9;">1</span><span style="color:#50FA7B;">);</span></span>
<span class="line"><span style="color:#50FA7B;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">public</span><span style="color:#50FA7B;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#50FA7B;"> onError(</span><span style="color:#8BE9FD;font-style:italic;">Throwable</span><span style="color:#50FA7B;"> </span><span style="color:#FFB86C;font-style:italic;">throwable</span><span style="color:#50FA7B;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#F8F8F2;">listener</span><span style="color:#50FA7B;">.onError();</span></span>
<span class="line"><span style="color:#50FA7B;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">public</span><span style="color:#50FA7B;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#50FA7B;"> onComplete() {</span></span>
<span class="line"><span style="color:#50FA7B;">                </span><span style="color:#F8F8F2;">listener</span><span style="color:#50FA7B;">.onClose();</span></span>
<span class="line"><span style="color:#50FA7B;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><p>And then we can use it in this way</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#8BE9FD;font-style:italic;">Test</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">testSse</span><span style="color:#F8F8F2;">() throws InterruptedException {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">MuServer</span><span style="color:#F8F8F2;"> server </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> MuServerBuilder.</span><span style="color:#50FA7B;">httpsServer</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">addHandler</span><span style="color:#F8F8F2;">(Method.GET, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/something</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, (request, response, map) </span><span style="color:#8BE9FD;font-style:italic;">-&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">                </span><span style="color:#8BE9FD;font-style:italic;">SsePublisher</span><span style="color:#F8F8F2;"> publisher </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> SsePublisher.</span><span style="color:#50FA7B;">start</span><span style="color:#F8F8F2;">(request, response);</span></span>
<span class="line"><span style="color:#F8F8F2;">                </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">Thread</span><span style="color:#F8F8F2;">(() </span><span style="color:#8BE9FD;font-style:italic;">-&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">                    </span><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> (</span><span style="color:#8BE9FD;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">; i </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">; i</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                        </span><span style="color:#FF79C6;">try</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">                            publisher.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Number</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> i, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">eventname</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, String.</span><span style="color:#50FA7B;">valueOf</span><span style="color:#F8F8F2;">(i));</span></span>
<span class="line"><span style="color:#F8F8F2;">                            Thread.</span><span style="color:#50FA7B;">sleep</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">100</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">                        } </span><span style="color:#FF79C6;">catch</span><span style="color:#F8F8F2;"> (</span><span style="color:#8BE9FD;font-style:italic;">Exception</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                            </span><span style="color:#6272A4;">// The user has probably disconnected so stopping</span></span>
<span class="line"><span style="color:#F8F8F2;">                            </span><span style="color:#FF79C6;">break</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">                        }</span></span>
<span class="line"><span style="color:#F8F8F2;">                    }</span></span>
<span class="line"><span style="color:#F8F8F2;">                    publisher.</span><span style="color:#50FA7B;">close</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">                }).</span><span style="color:#50FA7B;">start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">            })</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">HttpRequest</span><span style="color:#F8F8F2;"> request </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> HttpRequest.</span><span style="color:#50FA7B;">newBuilder</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">uri</span><span style="color:#F8F8F2;">(server.</span><span style="color:#50FA7B;">uri</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/something</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">header</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">user-agent</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">jdk-httpclient</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">build</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">CountDownLatch</span><span style="color:#F8F8F2;"> latch </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">CountDownLatch</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">AtomicInteger</span><span style="color:#F8F8F2;"> status </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">AtomicInteger</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">List</span><span style="color:#F8F8F2;">&lt;String&gt; messages </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">ArrayList</span><span style="color:#F8F8F2;">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">HttpResponse</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">BodyHandler</span><span style="color:#F8F8F2;">&lt;Void&gt; bodyHandler </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">SseBodyHandler</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">SseListener</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">        @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">onMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">data</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">eventName</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">id</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            messages.</span><span style="color:#50FA7B;">add</span><span style="color:#F8F8F2;">(String.</span><span style="color:#50FA7B;">join</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">_</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, data, eventName, id));</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">onOpen</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">int</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">statusCode</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            status.</span><span style="color:#50FA7B;">set</span><span style="color:#F8F8F2;">(statusCode);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">onClose</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">            latch.</span><span style="color:#50FA7B;">countDown</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">onError</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">            latch.</span><span style="color:#50FA7B;">countDown</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    client.</span><span style="color:#50FA7B;">sendAsync</span><span style="color:#F8F8F2;">(request, bodyHandler);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    latch.</span><span style="color:#50FA7B;">await</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, TimeUnit.MINUTES);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">assertThat</span><span style="color:#F8F8F2;">(status.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">()).</span><span style="color:#50FA7B;">isEqualTo</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">200</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">assertThat</span><span style="color:#F8F8F2;">(messages).</span><span style="color:#50FA7B;">isEqualTo</span><span style="color:#F8F8F2;">(List.</span><span style="color:#50FA7B;">of</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Number0_eventname_0</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Number1_eventname_1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Number2_eventname_2</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">    ));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><h2 id="working-with-websocket" tabindex="-1">Working with websocket <a class="header-anchor" href="#working-with-websocket" aria-label="Permalink to &quot;Working with websocket&quot;">​</a></h2><p>Basically what we need is to construct our <code>WebSocket.Listener</code> and use it as param on sending websocket requests. Again, do remember to call <code>webSocket.request(1)</code> in the listener, otherwise it will get hang.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#8BE9FD;font-style:italic;">Test</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">testWebsocket</span><span style="color:#F8F8F2;">() throws InterruptedException {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">MuServer</span><span style="color:#F8F8F2;"> server </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> MuServerBuilder.</span><span style="color:#50FA7B;">httpsServer</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#50FA7B;">addHandler</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">            WebSocketHandlerBuilder.</span><span style="color:#50FA7B;">webSocketHandler</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#50FA7B;">withPath</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/echo-socket</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#50FA7B;">withWebSocketFactory</span><span style="color:#F8F8F2;">((request, responseHeaders) </span><span style="color:#8BE9FD;font-style:italic;">-&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">BaseWebSocket</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">                    @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">                    </span><span style="color:#FF79C6;">public</span><span style="color:#50FA7B;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#50FA7B;"> onText(</span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#50FA7B;"> </span><span style="color:#FFB86C;font-style:italic;">message</span><span style="color:#50FA7B;">, </span><span style="color:#8BE9FD;font-style:italic;">boolean</span><span style="color:#50FA7B;"> </span><span style="color:#FFB86C;font-style:italic;">isLast</span><span style="color:#50FA7B;">, </span><span style="color:#8BE9FD;font-style:italic;">DoneCallback</span><span style="color:#50FA7B;"> </span><span style="color:#FFB86C;font-style:italic;">onComplete</span><span style="color:#50FA7B;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">                        session</span><span style="color:#F8F8F2;">()</span><span style="color:#50FA7B;">.sendText(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Received </span><span style="color:#E9F284;">&quot;</span><span style="color:#50FA7B;"> </span><span style="color:#FF79C6;">+</span><span style="color:#50FA7B;"> message, onComplete);</span></span>
<span class="line"><span style="color:#50FA7B;">                    }</span></span>
<span class="line"><span style="color:#F8F8F2;">                })</span></span>
<span class="line"><span style="color:#F8F8F2;">        )</span></span>
<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#50FA7B;">start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">CountDownLatch</span><span style="color:#F8F8F2;"> latch </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">CountDownLatch</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">List</span><span style="color:#F8F8F2;">&lt;String&gt; received </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">ArrayList</span><span style="color:#F8F8F2;">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#6272A4;">// construct websocket listener</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">WebSocket</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Listener</span><span style="color:#F8F8F2;"> listener </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> WebSocket.</span><span style="color:#50FA7B;">Listener</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">        @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">onOpen</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">WebSocket</span><span style="color:#F8F8F2;"> webSocket) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> (</span><span style="color:#8BE9FD;font-style:italic;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">; i </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">; i</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">                webSocket.</span><span style="color:#50FA7B;">sendText</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">message </span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> i, </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">            webSocket.</span><span style="color:#50FA7B;">request</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            webSocket.</span><span style="color:#50FA7B;">sendClose</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1000</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">normal close</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">CompletionStage</span><span style="color:#FF79C6;">&lt;?&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">onText</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">                </span><span style="color:#8BE9FD;font-style:italic;">WebSocket</span><span style="color:#F8F8F2;"> webSocket, </span></span>
<span class="line"><span style="color:#F8F8F2;">                </span><span style="color:#8BE9FD;font-style:italic;">CharSequence</span><span style="color:#F8F8F2;"> data, </span></span>
<span class="line"><span style="color:#F8F8F2;">                </span><span style="color:#8BE9FD;font-style:italic;">boolean</span><span style="color:#F8F8F2;"> last) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            received.</span><span style="color:#50FA7B;">add</span><span style="color:#F8F8F2;">(data.</span><span style="color:#50FA7B;">toString</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#F8F8F2;">            webSocket.</span><span style="color:#50FA7B;">request</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        @</span><span style="color:#8BE9FD;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">CompletionStage</span><span style="color:#FF79C6;">&lt;?&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">onClose</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">                </span><span style="color:#8BE9FD;font-style:italic;">WebSocket</span><span style="color:#F8F8F2;"> webSocket, </span></span>
<span class="line"><span style="color:#F8F8F2;">                </span><span style="color:#8BE9FD;font-style:italic;">int</span><span style="color:#F8F8F2;"> statusCode, </span></span>
<span class="line"><span style="color:#F8F8F2;">                </span><span style="color:#8BE9FD;font-style:italic;">String</span><span style="color:#F8F8F2;"> reason) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            latch.</span><span style="color:#50FA7B;">countDown</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#6272A4;">// use the listener as callback for receiving message and sending message</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;font-style:italic;">URI</span><span style="color:#F8F8F2;"> resolve </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> URI.</span><span style="color:#50FA7B;">create</span><span style="color:#F8F8F2;">(server.</span><span style="color:#50FA7B;">uri</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">toString</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">http</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ws</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/echo-socket</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    System.out.</span><span style="color:#50FA7B;">println</span><span style="color:#F8F8F2;">(resolve);</span></span>
<span class="line"><span style="color:#F8F8F2;">    client.</span><span style="color:#50FA7B;">newWebSocketBuilder</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">connectTimeout</span><span style="color:#F8F8F2;">(Duration.</span><span style="color:#50FA7B;">ofMillis</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">5000</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">buildAsync</span><span style="color:#F8F8F2;">(resolve, listener);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    latch.</span><span style="color:#50FA7B;">await</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, TimeUnit.MINUTES);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">assertThat</span><span style="color:#F8F8F2;">(received).</span><span style="color:#50FA7B;">isEqualTo</span><span style="color:#F8F8F2;">(List.</span><span style="color:#50FA7B;">of</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Received message 0</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Received message 1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Received message 2</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Received message 3</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Received message 4</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">    ));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>This is a quick guide for using JDK http client working with SSE and websocket. Please feel free to read my previous article for sending simple GET/POST request, and also some complex case for streaming request body, stream receiving response body.</p><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">​</a></h2><p><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.net.http/java/net/http/HttpClient.html" target="_blank" rel="noreferrer">https://docs.oracle.com/en/java/javase/17/docs/api/java.net.http/java/net/http/HttpClient.html</a></p>`,13)]))}const A=n(o,[["render",e]]);export{B as __pageData,A as default};
